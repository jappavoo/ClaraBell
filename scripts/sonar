#!/usr/bin/wish

wm title . "shapes" 

# only start to animate after first mapping call 
proc startanimate {} {
  after $::interval animate
}

proc animate {} {
    gets stdin line	
    scan $line "%d%d%d%d" d1 d0 d3 d2 
 
    if [info exists d0] {
	set dx0 [expr {$d0 * tan(0.261799388)}]
	set l0 [expr {200 - $d0}]
	.can coords $::t0 200 200 [expr {200 - $dx0}] $l0 [expr {200 + $dx0}] $l0
    }      
    if [info exists d1] {
	set dx1 [expr {$d1 * tan(0.261799388)}]
	set l1 [expr {200 + $d1}]
	.can coords $::t1 200 200 $l1 [expr {200 - $dx1}] $l1 [expr {200 + $dx1}]
    }
    if [info exists d2] {
	set dx2 [expr {$d2 * tan(0.261799388)}]
	set l2 [expr {200 + $d2}]
	.can coords $::t2 200 200 [expr {200 - $dx2}] $l2 [expr {200 + $dx2}] $l2
    }
    if [info exists d3] {
	set dx3 [expr {$d3 * tan(0.261799388)}]
	set l3 [expr {200 - $d3}]
	.can coords $::t3 200 200 $l3 [expr {200 - $dx3}] $l3 [expr {200 + $dx3}] 
    }
    after $::interval animate
}

wm geometry . 400x400+0+0

set ::interval 200

# start the things off assuming that we can't see anything.
set d 0
set dx [expr {$d * tan(0.261799388)}]
set ln [expr {200 - $d}]
set lp [expr {200 + $d}]

canvas .can -width 400 -height 400 -bg #000

set ::t0 [.can create polygon \
              [list 200 200 [expr {200 - $dx}] $ln  [expr {200 + $dx}] $ln] \
              -outline #000  -fill #fff]

set ::t1 [.can create polygon \
              [list 200 200 $lp [expr {200 - $dx}] $lp [expr {200 + $dx}]] \
              -outline #f00  -fill #fff]

set ::t2 [.can create polygon \
              [list 200 200 [expr {200 - $dx}] $lp  [expr {200 + $dx}] $lp] \
              -outline #00f  -fill #fff]

set ::t3 [.can create polygon \
              [list 200 200 $ln [expr {200 - $dx}] $ln [expr {200 + $dx}]] \
              -outline #0f0  -fill #fff]

.can raise  off

# make standard in non-blocking to keep ui reponsive
fconfigure stdin -blocking 0

bind .can <Map> startanimate
pack .can


